services:
  web:
    build: 
      context: fastapi-server
      dockerfile: ./compose/local/fastapi/Dockerfile
    ports:
      - "8000:8000"
    command: ["/start.sh"]
    volumes:
      - ./fastapi-server:/app
    env_file: 
      - ./fastapi-server/.env
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - redis

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server --save 60 1 --loglevel warning
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M

  celery_worker:
    build:
      context: fastapi-server
      dockerfile: ./compose/local/fastapi/Dockerfile
    command: ["/start-celery-worker.sh"]
    volumes:
      - ./fastapi-server:/app
    env_file: 
      - ./fastapi-server/.env
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy

  celery_beat:
    build:
      context: fastapi-server
      dockerfile: ./compose/local/fastapi/Dockerfile
    command: ["/start-celery-beat.sh"]
    volumes:
      - ./fastapi-server:/app
    env_file:
      - ./fastapi-server/.env
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
    restart: always

  flower:
    build:
      context: fastapi-server
      dockerfile: ./compose/local/fastapi/Dockerfile
    volumes:
      - ./fastapi-server:/app
    command: ["/start-celery-flower.sh"]
    ports:
      - "5555:5555"
    env_file:
      - ./fastapi-server/.env
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
      celery_worker:
        condition: service_started
    restart: always

volumes:
  redis_data: